name: trac-portal-local

services:
  ui:
    container_name: trac-portal-ui-local
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      api:
        condition: service_healthy
    networks:
      - trac-network

  api:
    container_name: trac-portal-api-local
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8000
      - DOMAIN=${DOMAIN}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-trac_db}
      - DB_SSL=false
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=http://${DOMAIN}/api/auth/google/callback
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8000/api/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - trac-network

  db:
    container_name: trac-db-local
    image: postgres:16-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-trac_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - trac-network

networks:
  trac-network:
    name: trac-network-local

volumes:
  postgres_data:
    name: trac-postgres-data-local
